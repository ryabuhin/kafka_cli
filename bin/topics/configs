#!/bin/bash
#
# Get detailed topic configuration on the specified kafka cluster by topic name.
#
# Required Arguments:
#   'environment'         : environment name of the specified kafka cluster.
#   'topic'               : topic name to describe configurations. 
#
# All configuration files must be stored in '${KFK_CLI_HOME}/etc/env' directory.
# All configuration files must follow the following pattern name: <cluster-name>_config.properties
# ---
# author: valentine-riabukhin.pro

SCRIPT_LOCATION="$(cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
INVALID_ARGUMENTS_ERROR_CODE=128

active_logger="${KFK_CLI_HOME}/etc/logging/active-log4j.properties"
[ -f "${active_logger}" ] && export KAFKA_LOG4J_OPTS="-Dlog4j.configuration=file:${active_logger}" || unset KAFKA_LOG4J_OPTS

KAFKA_CONFIGS_BIN=$(compgen -ac | grep kafka-configs | head -n 1)

usage() {
    local exit_status="${1}"
    [[ -z "${exit_status}" ]] && exit_status=0
    cat <<EOF
Usage: kfk topics configs [<parameters>]
Description:
    Get detailed topic configuration on the specified kafka cluster by topic name.
    
    All configuration files must be stored in '\${KFK_CLI_HOME}/etc/env' directory.
    All configuration files must follow the following pattern name: <cluster-name>_config.properties
    
    Required Arguments:
      'environment'         : environment name of the specified kafka cluster.
      'topic'               : topic name to describe configurations.
Examples:
    kfk topics configs dev dev-topic-to-describe
    kfk topics configs local-dev dev-topic-to-describe
EOF
    exit $exit_status
}

if [ "${1}" = 'help' ]; then usage
elif [ -z "$1" ] || [ -z "$2" ]; then usage ${INVALID_ARGUMENTS_ERROR_CODE}; fi

ENVIRONMENT="$1"
TOPIC_NAME="$2"
ENV_PROPS_LOCATION="${KFK_CLI_HOME}/etc/env/${ENVIRONMENT}_config.properties"

if ! [ -f "${ENV_PROPS_LOCATION}" ]; then 
    cat <<EOF 
The configuration file for '${ENVIRONMENT}' environment could not be found. Make sure it exists.

Help:
    All configuration files must be stored in '\${KFK_CLI_HOME}/etc/env' directory.
    All configuration files must follow the following pattern name: <cluster-name>_config.properties

Type 'kfk topics help configs' to read more about 'configs' command.
EOF
    exit ${INVALID_ARGUMENTS_ERROR_CODE}
fi

KAFKA_CONFIGS_COMMAND="${KAFKA_CONFIGS_BIN} \
    --entity-type topics \
    --entity-name ${TOPIC_NAME} \
    --describe \
    --all \
    --command-config ${ENV_PROPS_LOCATION}"

IFS=$'\n'
for FILE_PROPERTY in $(cat ${ENV_PROPS_LOCATION} | egrep ^[a-zA-Z0-9]); do 
    if [ "$FILE_PROPERTY" != "${FILE_PROPERTY/bootstrap.servers//}" ]; then
        IFS=$'='; SPLITTED_BOOTSTRAP_SERVER=($FILE_PROPERTY); IFS=$'\n'
        BOOTSTRAP_SERVER="${SPLITTED_BOOTSTRAP_SERVER[1]}"
        KAFKA_CONFIGS_COMMAND="$KAFKA_CONFIGS_COMMAND --bootstrap-server $BOOTSTRAP_SERVER"
    fi
done

eval $KAFKA_CONFIGS_COMMAND